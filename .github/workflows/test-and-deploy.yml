name: "Test and Deploy"

on:
  push:
    branches:
      - "main"

jobs:
  run:
    runs-on: ubuntu-20.04
    env:
      extensions: bcmath, bz2, curl, gd, intl, ldap, mbstring, opcache, readline, sqlite3, tidy, xml, xsl, zip, swoole-4.6.3
      ini-values: memory_limit=-1
      key: swoole-4.6.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: "8.0"
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          php-version: "8.0"
          extensions: ${{ env.extensions }}
          ini-values: ${{ env.ini-values }}
          coverage: none
          tools: cs2pr, composer:v2

      - name: Install dependencies
        run: composer install --ignore-platform-req=php

      - name: Setup PHPUnit problem matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run tests
        run: ./vendor/bin/phpunit

      - name: Run CS checks
        run: ./vendor/bin/phpcs -q --report=checkstyle | cs2pr

      - name: Cache deployer executable
        id: deployercache
        uses: actions/cache@v2
        with:
          path: /usr/local/bin/dep
          key: ${{ runner.os }}.${{ hashFiles('/usr/local/bin/dep') }}

      - name: Install deployer executable
        if: steps.deployercache.outputs.cache-hit != 'true'
        run: |
          curl -LO https://deployer.org/deployer.phar
          mv deployer.phar /usr/local/bin/dep
          chmod +x /usr/local/bin/dep

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          config: ${{ secrets.SSH_CONFIG }}

      - name: Deploy
        env:
          PROD_ENV: ${{ secrets.PROD_ENV_FILE }}
        run: |
          echo "${PROD_ENV}" > .prod.env
          dep deploy production

